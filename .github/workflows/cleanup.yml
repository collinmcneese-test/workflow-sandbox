name: cleanup

on:
  workflow_run:
    workflows: [artifacts]
    types:
      - completed

jobs:
  # create_artifacts:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: generate files
  #       run:  for i in {1..5}; do echo "testcontent${i}" > "testfile${i}"; done
  #     - name: Create some artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: test-artifacts
  #         path: |
  #           **/testfile*

  # consume_artifacts:
  #   needs: create_artifacts
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: download named artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: test-artifacts
  #     - run: ls -l

  # cleanup:
  #   runs-on: ubuntu-latest
  #   needs: consume_artifacts
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         version: 16
  #     - run: npm install @octokit/action
  #     - run: npx node artifact.js
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          version: 16
      - run: npm install @octokit/action
      - run: npx node artifacts.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_ID: ${{ github.event.workflow_run.id }}
  # cleanup-list:
  #   needs: consume_artifacts
  #   permissions:
  #     actions: read
  #   runs-on: ubuntu-latest
  #   outputs:
  #     artifact-data: ${{ steps.get-workflow-artifacts.outputs.data }}
  #   steps:
  #     - uses: octokit/request-action@v2.1.4
  #       id: get-workflow-artifacts
  #       with:
  #         route: GET /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     - run: echo "${{ steps.get-workflow-artifacts.outputs.data }}"
  #     - run: echo "${{ fromJson(steps.get-workflow-artifacts.outputs.data).artifacts }}"

  # cleanup:
  #   runs-on: ubuntu-latest
  #   needs: cleanup-list
  #   strategy:
  #     matrix:
  #       artifact: ${{ fromJson(needs.cleanup-list.outputs.artifact-data).artifacts }}
  #   steps:
  #     - uses: octokit/request-action@v2.1.4
  #       name: cleanup artifact
  #       with:
  #         route: DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}
  #         owner: collinmcneese-test
  #         repo: workflow-sandbox
  #         artifact_id: ${{ matrix.artifact.id }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
